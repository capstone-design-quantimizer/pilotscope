version: '3.8'

services:
  pilotscope-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        enable_postgresql: "true"
        enable_spark: "false"
    image: pilotscope:dev
    container_name: pilotscope-dev
    
    # Volume mount for live code updates (NO REBUILD NEEDED!)
    volumes:
      - .:/home/pilotscope/workspace
      - postgres-data:/home/pilotscope/pg_data  # PostgreSQL 데이터 영구 저장
    
    # Set working directory (where PostgreSQL and Conda are installed)
    working_dir: /home/pilotscope/workspace
    
    # Use custom entrypoint for dev setup
    entrypoint: ["/home/pilotscope/workspace/docker-entrypoint.sh"]
    
    # Keep container running
    stdin_open: true
    tty: true
    
    # Port mappings
    ports:
      - "54323:5432"  # PostgreSQL
      - "54023:22"    # SSH
    
    # Shared memory size (for PostgreSQL) - 더 크게 설정
    shm_size: 8gb
    
    # Capabilities (for debugging with ptrace)
    cap_add:
      - SYS_PTRACE
    
    # Environment variables
    environment:
      - PYTHONUNBUFFERED=1
      - CONDA_DEFAULT_ENV=pilotscope
      # GPU 관련 환경 변수
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      # PyTorch 성능 최적화
      - OMP_NUM_THREADS=8
      - MKL_NUM_THREADS=8
      # PostgreSQL 성능
      - POSTGRES_SHARED_BUFFERS=2GB
      - POSTGRES_WORK_MEM=128MB
    
    # 리소스 제한 및 GPU 설정
    deploy:
      resources:
        limits:
          cpus: '0'  # 무제한 (0 = 모든 CPU 사용 가능)
          memory: 32G  # 메모리 제한 (필요에 따라 조정)
        reservations:
          cpus: '4'  # 최소 4 CPU 코어 예약
          memory: 8G  # 최소 8GB 메모리 예약
          # GPU 설정 (NVIDIA GPU가 있는 경우)
          devices:
            - driver: nvidia
              count: all  # 모든 GPU 사용 (또는 count: 1로 GPU 1개만)
              capabilities: [gpu]
    
    # Network
    networks:
      - pilotscope-net

  # Optional: Separate PostgreSQL service
  # postgres:
  #   image: postgres:13.1
  #   container_name: pilotscope-postgres
  #   environment:
  #     POSTGRES_USER: pilotscope
  #     POSTGRES_PASSWORD: pilotscope
  #     POSTGRES_DB: pilotscope
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - pilotscope-net

networks:
  pilotscope-net:
    driver: bridge

volumes:
  postgres-data:
